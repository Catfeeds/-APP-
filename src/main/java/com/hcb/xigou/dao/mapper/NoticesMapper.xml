<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hcb.xigou.dao.interfaceClass.NoticesMapper" >
  <resultMap id="BaseResultMap" type="com.hcb.xigou.dto.Notices" >
    <id column="fake_id" property="fakeId" jdbcType="INTEGER" />
    <result column="notice_uuid" property="noticeUuid" jdbcType="VARCHAR" />
    <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP" />
    <result column="update_datetime" property="updateDatetime" jdbcType="TIMESTAMP" />
    <result column="delete_at" property="deleteAt" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="is_open" property="isOpen" jdbcType="CHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="open_time" property="openTime" jdbcType="TIMESTAMP" />
    <result column="close_time" property="closeTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    fake_id, notice_uuid, create_datetime, update_datetime, delete_at, title, content, 
    type, is_open, start_time, end_time, open_time, close_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notices
    where fake_id = #{fakeId,jdbcType=INTEGER}
  </select>
  <!-- 根据uuid -->
  <select id="selectByNoticeUuid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from notices
    where notice_uuid = #{noticeUuid,jdbcType=VARCHAR} and delete_at is null
  </select>
  <!-- 列表 -->
  <select id="selectByPaging" resultType="java.util.Map" parameterType="java.util.HashMap">
  	select 
  	notice_uuid,content,is_open
  	from notices
  	where type = 'system' and delete_at is null
  	order by create_datetime desc LIMIT #{start},#{end}
  </select>
  
  <select id="totalCount" resultType="java.lang.Integer" parameterType="java.util.HashMap" >
  	select count(1)
  	from notices
  	where is_open = 'yes' and type = 'system' and delete_at is null
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notices
    where fake_id = #{fakeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hcb.xigou.dto.Notices" >
    insert into notices (fake_id, notice_uuid, create_datetime, 
      update_datetime, delete_at, title, 
      content, type, is_open, start_time, 
      end_time, open_time, close_time
      )
    values (#{fakeId,jdbcType=INTEGER}, #{noticeUuid,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}, 
      #{updateDatetime,jdbcType=TIMESTAMP}, #{deleteAt,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{isOpen,jdbcType=CHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{openTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hcb.xigou.dto.Notices" >
    insert into notices
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fakeId != null" >
        fake_id,
      </if>
      <if test="noticeUuid != null" >
        notice_uuid,
      </if>
      <if test="createDatetime != null" >
        create_datetime,
      </if>
      <if test="updateDatetime != null" >
        update_datetime,
      </if>
      <if test="deleteAt != null" >
        delete_at,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isOpen != null" >
        is_open,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="openTime != null" >
        open_time,
      </if>
      <if test="closeTime != null" >
        close_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fakeId != null" >
        #{fakeId,jdbcType=INTEGER},
      </if>
      <if test="noticeUuid != null" >
        #{noticeUuid,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null" >
        #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        #{deleteAt,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="isOpen != null" >
        #{isOpen,jdbcType=CHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openTime != null" >
        #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hcb.xigou.dto.Notices" >
    update notices
    <set >
      <if test="noticeUuid != null" >
        notice_uuid = #{noticeUuid,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null" >
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDatetime != null" >
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteAt != null" >
        delete_at = #{deleteAt,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="isOpen != null" >
        is_open = #{isOpen,jdbcType=CHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openTime != null" >
        open_time = #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null" >
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where fake_id = #{fakeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hcb.xigou.dto.Notices" >
    update notices
    set notice_uuid = #{noticeUuid,jdbcType=VARCHAR},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      delete_at = #{deleteAt,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      is_open = #{isOpen,jdbcType=CHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      open_time = #{openTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP}
    where fake_id = #{fakeId,jdbcType=INTEGER}
  </update>
</mapper>